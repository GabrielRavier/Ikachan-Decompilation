/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'dxIka'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct tagWNDCLASSA;
struct HWND__;
struct HINSTANCE__;
struct HICON__;
struct HBRUSH__;
struct _iobuf;

/* 1 */
struct _SCOPETABLE_ENTRY
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 2 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 29 */
typedef unsigned __int32 DWORD;

/* 3 */
struct _EH3_EXCEPTION_REGISTRATION
{
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 4 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 5 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 6 */
struct CPPEH_RECORD
{
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 8 */
typedef __int32 LONG;

/* 7 */
struct tagRECT
{
  LONG left;
  LONG top;
  LONG right;
  LONG bottom;
};

/* 9 */
struct tagPOINT
{
  LONG x;
  LONG y;
};

/* 10 */
typedef tagWNDCLASSA WNDCLASSA;

/* 12 */
typedef unsigned int UINT;

/* 18 */
typedef LONG LRESULT;

/* 14 */
typedef HWND__ *HWND;

/* 16 */
typedef UINT WPARAM;

/* 17 */
typedef LONG LPARAM;

/* 13 */
typedef LRESULT (__stdcall *WNDPROC)(HWND, UINT, WPARAM, LPARAM);

/* 19 */
typedef HINSTANCE__ *HINSTANCE;

/* 21 */
typedef HICON__ *HICON;

/* 23 */
typedef HICON HCURSOR;

/* 24 */
typedef HBRUSH__ *HBRUSH;

/* 27 */
typedef char CHAR;

/* 26 */
typedef const CHAR *LPCSTR;

/* 11 */
struct tagWNDCLASSA
{
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
};

/* 15 */
struct HWND__
{
  int unused;
};

/* 20 */
struct HINSTANCE__
{
  int unused;
};

/* 22 */
struct HICON__
{
  int unused;
};

/* 25 */
struct HBRUSH__
{
  int unused;
};

/* 30 */
typedef tagPOINT POINT;

/* 28 */
struct tagMSG
{
  HWND hwnd;
  UINT message;
  WPARAM wParam;
  LPARAM lParam;
  DWORD time;
  POINT pt;
};

/* 32 */
typedef CHAR *LPSTR;

/* 33 */
typedef unsigned __int16 WORD;

/* 35 */
typedef unsigned __int8 BYTE;

/* 34 */
typedef BYTE *LPBYTE;

/* 36 */
typedef void *HANDLE;

/* 31 */
struct _STARTUPINFOA
{
  DWORD cb;
  LPSTR lpReserved;
  LPSTR lpDesktop;
  LPSTR lpTitle;
  DWORD dwX;
  DWORD dwY;
  DWORD dwXSize;
  DWORD dwYSize;
  DWORD dwXCountChars;
  DWORD dwYCountChars;
  DWORD dwFillAttribute;
  DWORD dwFlags;
  WORD wShowWindow;
  WORD cbReserved2;
  LPBYTE lpReserved2;
  HANDLE hStdInput;
  HANDLE hStdOutput;
  HANDLE hStdError;
};

/* 38 */
typedef void *LPVOID;

/* 39 */
typedef int BOOL;

/* 37 */
struct _SECURITY_ATTRIBUTES
{
  DWORD nLength;
  LPVOID lpSecurityDescriptor;
  BOOL bInheritHandle;
};

/* 40 */
struct _cpinfo
{
  UINT MaxCharSize;
  BYTE DefaultChar[2];
  BYTE LeadByte[12];
};

/* 41 */
typedef _iobuf FILE;

/* 42 */
#pragma pack(push, 8)
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};
#pragma pack(pop)

/* 43 */
union __declspec(align(8)) __m64
{
  unsigned __int64 m64_u64;
  float m64_f32[2];
  __int8 m64_i8[8];
  __int16 m64_i16[4];
  __int32 m64_i32[2];
  __int64 m64_i64;
  unsigned __int8 m64_u8[8];
  unsigned __int16 m64_u16[4];
  unsigned __int32 m64_u32[2];
};

/* 44 */
union __declspec(align(16)) __m128
{
  float m128_f32[4];
  unsigned __int64 m128_u64[2];
  __int8 m128_i8[16];
  __int16 m128_i16[8];
  __int32 m128_i32[4];
  __int64 m128_i64[2];
  unsigned __int8 m128_u8[16];
  unsigned __int16 m128_u16[8];
  unsigned __int32 m128_u32[4];
};

/* 45 */
struct __m128d
{
  double m128d_f64[2];
};

/* 46 */
union __declspec(align(16)) __m128i
{
  __int8 m128i_i8[16];
  __int16 m128i_i16[8];
  __int32 m128i_i32[4];
  __int64 m128i_i64[2];
  unsigned __int8 m128i_u8[16];
  unsigned __int16 m128i_u16[8];
  unsigned __int32 m128i_u32[4];
  unsigned __int64 m128i_u64[2];
};

